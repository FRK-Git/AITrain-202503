<apex:page showHeader="true" standardStylesheets="false" sidebar="false" applyHtmlTag="true" applyBodyTag="false" lightningStylesheets="false" docType="html-5.0" standardController="BookInfo__c" extensions="BookInfoEditExtension">

    <html xmlns:v-model="https://cn.vuejs.org" xmlns:v-on="https://cn.vuejs.org" xmlns:v-bind="https://cn.vuejs.org" xmlns:v-for="https://cn.vuejs.org" xmlns:v-slot="https://cn.vuejs.org" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <apex:slds />

    <head>
        <meta charset="utf-8" name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <!-- <link rel="stylesheet" href="https://unpkg.com/element-ui@2.15.13/lib/theme-chalk/index.css"></link> -->
        <apex:stylesheet value="{!URLFOR($Resource.ElementUI, 'elementui_2.15.13_index.css')}"/>
        <!-- <apex:stylesheet value="{!$Resource.ElementUICSS}" /> -->
        <style type="text/css">

            body {
                margin: 0 !important;
            }

            .slds-truncate {
                width: 60% !important;
            }

            .el-select {
                width: 100% !important;
            }

            .el-date-editor--date {
                width: 100% !important;
            }

            .text-area-css {
                width: 82% !important;
            }

            .seize-a-seat {
                width: 10% !important;
            }

            .box-card {
                width: 100% !important;
            }

            .bookItemCard {
                margin-top: 15px;
                box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);
            }

            .addButtonSpan {
                margin-right: 8px;
            }

            
        </style>
    </head>
    <body>
        <div id="app" class="slds-scope" style="width: 100%;height: 100%;max-width: 1499px;">
            <!-- <div style="background-color: #F2F2F2;height: 3rem;padding-top: 0.5rem;margin-bottom: 0.5rem;">
                <div class="slds-grid" style="padding-left: 0.5rem">
                    <span class="slds-avatar">
                        <span class="slds-icon_container slds-icon-standard-quip">
                            <svg class="slds-icon slds-icon-custom-12" aria-hidden="true" style="background: #1797C0;">
                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/apexpages/slds/latest/assets/icons/standard-sprite/svg/symbols.svg#quip"></use>
                            </svg>
                        </span>
                    </span>
                    <h1 class="slds-page-header__title slds-truncate" style="font-size: 1.1rem;margin-left: 10px;padding: 2px;margin-top: 4px;">
                        图书信息
                    </h1>
                </div>
            </div> -->
            <div style="width: 100%;">
                <article class="slds-card" >
                    <div class="slds-card__header slds-grid">
                        <header class="slds-media slds-media_center slds-has-flexi-truncate">
                        <div class="slds-media__figure">
                            <span class="slds-avatar">
                                <span class="slds-icon_container slds-icon-standard-quip">
                                    <svg class="slds-icon slds-icon-custom-12" aria-hidden="true" style="background: #1797C0;">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/apexpages/slds/latest/assets/icons/standard-sprite/svg/symbols.svg#quip"></use>
                                    </svg>
                                </span>
                            </span>
                        </div>
                        <div class="slds-media__body">
                            <h2 class="slds-card__header-title">
                                <a href="#" class="slds-card__header-link slds-truncate" title="BookInfo">
                                    <span>图书信息</span>
                                </a>
                            </h2>
                        </div>
                        <div class="slds-no-flex">     
                            <div class="slds-icon-eq slds-is-animated" title="Description of the icon when needed">
                                <div class="slds-icon-eq__bar"></div>
                                <div class="slds-icon-eq__bar"></div>
                                <div class="slds-icon-eq__bar"></div>
                                <span class="slds-assistive-text">Text alternative when needed</span>
                            </div>
                        </div>
                        </header>
                    </div>
                    <div class="slds-card__body slds-card__body_inner" >
                        <el-card class="box-card">
                            <table class="slds-table slds-table_cell-buffer ">
                                <tbody>
                                    <tr>
                                        <td>
                                            <div class="slds-truncate seize-a-seat"></div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="BookName">图书名称</label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <input type="text" id="BookName" required="" class="slds-input" v-model="bookInfo.bookName"/>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="SubjectType">学科类型</label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate" id="SubjectType">
                                                <template>
                                                  <el-select v-model="bookInfo.subjectType" placeholder="请选择">
                                                    <el-option
                                                      v-for="item in subjectTypeList"
                                                      v-bind:key="item.value"
                                                      v-bind:label="item.label"
                                                      v-bind:value="item.value">
                                                    </el-option>
                                                  </el-select>
                                                </template>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="slds-truncate seize-a-seat"></div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="Publisher">出版社</label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <input type="text" id="Publisher" required="" class="slds-input" v-model="bookInfo.publisher"/>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="PublishDate">出版日期</label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate" id="PublishDate">
                                                <el-date-picker
                                                  v-model="bookInfo.publishDate"
                                                  type="date"
                                                  format="yyyy-MM-dd"
                                                  value-format="yyyy-MM-dd"
                                                  placeholder="选择日期">
                                                </el-date-picker>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="slds-truncate seize-a-seat"></div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="Author">作者</label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <input type="text" id="Author" required="" class="slds-input" v-model="bookInfo.author"/>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="Price">价格</label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <input type="number" id="Price" required="" class="slds-input" v-model="bookInfo.price"/>
                                            </div>
                                        </td>
                                    </tr>
                                    
                                    <tr>
                                        <td>
                                            <div class="slds-truncate seize-a-seat"></div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="Owner">所有人</label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <template>
                                                  <el-select
                                                    v-model="bookInfo.ownerId"
                                                    filterable="true"
                                                    remote="true"
                                                    reserve-keyword="true"
                                                    placeholder="请输入关键词"
                                                    v-bind:remote-method="remoteMethod"
                                                    v-bind:loading="loading">
                                                    <el-option
                                                      v-for="item in ownerList"
                                                      v-bind:key="item.value"
                                                      v-bind:label="item.label"
                                                      v-bind:value="item.value">
                                                    </el-option>
                                                  </el-select>
                                                </template>
                                            </div>
                                        </td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="slds-truncate seize-a-seat"></div>
                                        </td>
                                        <td>
                                            <div class="slds-truncate">
                                                <label class="slds-form-element__label" for="Introduction">简介</label>
                                            </div>
                                        </td>
                                        <td colspan="3">
                                            <div class="slds-truncate text-area-css">
                                                <textarea id="Introduction" class="slds-textarea" v-model="bookInfo.introduction"></textarea>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </el-card>
                        <div class="bookItemCard">
                            <template>
                              <el-table
                                v-bind:data="bookDetailList.slice((paginationInfo.currentPage - 1) * paginationInfo.pageSize, paginationInfo.currentPage * paginationInfo.pageSize)"
                                stripe="true"
                                height="400"
                                style="width: 100%">
                                <el-table-column
                                  prop="name"
                                  label="图书详情编号"
                                  fixed="left"
                                  width="250">
                                </el-table-column>
                                <el-table-column
                                  prop="bookName"
                                  label="图书名称"
                                  width="300">
                                </el-table-column>
                                <el-table-column
                                  prop="bookStatus"
                                  label="图书状态"
                                  width="220">
                                  <template slot-scope="scope">
                                      <el-select v-if="scope.row.isEdit" v-model="scope.row.bookStatus" placeholder="请选择">
                                        <el-option
                                          v-for="item in bookStatusList"
                                          v-bind:key="item.value"
                                          v-bind:label="item.label"
                                          v-bind:value="item.value">
                                        </el-option>
                                      </el-select>
                                      <div v-if="!scope.row.isEdit">{{scope.row.bookStatus}}</div>
                                  </template>
                                </el-table-column>
                                <el-table-column
                                  prop="author"
                                  label="作者"
                                  width="250">
                                </el-table-column>
                                <el-table-column
                                  prop="price"
                                  label="价格"
                                  width="200">
                                </el-table-column>
                                <el-table-column
                                  prop="isSelected"
                                  label="是否选中"
                                  width="150">
                                  <!-- <template slot-scope="scope">
                                      <div v-if="scope.row.isEdit">
                                          <el-button v-if="scope.row.isSelected" v-on:click="isSelectedClick(scope.row)" type="text" size="small" class="el-icon-check"></el-button>
                                          <el-button v-if="!scope.row.isSelected" v-on:click="isSelectedClick(scope.row)" type="text" size="small" class="el-icon-close"></el-button>
                                      </div>
                                      <div v-if="!scope.row.isEdit">
                                          <el-button v-if="scope.row.isSelected" type="text" size="small" class="el-icon-check"></el-button>
                                          <el-button v-if="!scope.row.isSelected" type="text" size="small" class="el-icon-close"></el-button>
                                      </div>
                                  </template> -->
                                  <template slot-scope="scope">
                                      <el-switch
                                        v-model="scope.row.isSelected"
                                        v-bind:disabled="!scope.row.isEdit"
                                        active-text="是"
                                        inactive-text="否">
                                      </el-switch>
                                  </template>
                                </el-table-column>
                                <el-table-column
                                  fixed="right"
                                  label="操作"
                                  v-bind:render-header="addButton"
                                  width="150">
                                  <template slot-scope="scope">
                                    <el-button v-if="!scope.row.isEdit" v-on:click="handleClick(scope.row)" type="primary" size="small" class="el-icon-edit"></el-button>
                                    <el-button v-if="scope.row.isEdit" v-on:click="handleClick(scope.row)" type="success" size="small" class="el-icon-view"></el-button>
                                    <el-button type="danger" size="small" class="el-icon-delete" v-on:click="deleteRow(scope.$index)"></el-button>
                                  </template>
                                </el-table-column>
                              </el-table>
                              <el-pagination
                                v-on:size-change="handleSizeChange"
                                v-on:current-change="handleCurrentChange"
                                v-bind:current-page="paginationInfo.currentPage"
                                v-bind:page-sizes="paginationInfo.pageSizeList"
                                v-bind:page-size="paginationInfo.pageSize"
                                layout="total, sizes, prev, pager, next, jumper"
                                v-bind:total="paginationInfo.total">
                              </el-pagination>
                            </template>
                        </div>
                        <div>
                            <select v-on:change="selectChange" v-model="selectValue">
                                <option v-for="item in selectMap.keys()" v-bind:value="item">{{selectMap.get(item)}}</option>
                            </select>
                        </div>
                    </div>
                    <footer class="slds-card__footer">
                        <button type="button" class="slds-button slds-button_neutral" v-on:click="cancelSave">取消</button>
                        <button type="button" class="slds-button slds-button_brand" v-on:click="saveInfo">保存</button>
                    </footer>
                </article>
            </div>
        </div>
    </body>
    <!-- <script src="https://unpkg.com/element-ui@2.15.13/lib/index.js"></script> -->
    
    <!-- <apex:includeScript value="{!$Resource.ElementUIJS}" /> -->
    <apex:includeScript value="{!$Resource.Vue}" />
    <apex:includeScript value="{!URLFOR($Resource.ElementUI, 'elementui_2.15.13_index.js')}" />
    <script type="text/javascript">
    const app = new Vue({
        el: '#app',
        data: {

            bookInfo: {
                id: '',                     //图书信息Id
                bookName: '',               //图书名称
                subjectType: '',            //学科类型
                publisher: '',              //出版社
                publishDate: '',            //出版日期
                author: '',                 //作者
                price: 0,                   //价格
                ownerId: '',                //所有人
                introduction: ''            //简介
            },
            loading: false,                 //所有人lookup字段的加载条
            subjectTypeList: JSON.parse('{!subjectTypeStr}'),       //学科类型选项列表
            ownerList: JSON.parse('{!ownerStr}'),                   //查询到的所有人的列表

            bookDetailList: JSON.parse('{!bookDetailListStr}'),     //图书详细信息列表  
            bookStatusList: JSON.parse('{!bookDetailStatusStr}'),   //图书详情信息图书状态选项列表

            paginationInfo: {
                currentPage: 1,                 //当前页
                pageSize: 3,                    //页面大小
                total: 0,   //总记录数
                pageSizeList: [1,2,3,4],        //页面大小列表
            },

            selectMap: new Map(),
            selectValue: '1',
        },
        methods: {
            remoteMethod: function(query) {
                if (query !== '') {
                    this.loading = true;
                    // setTimeout(() => {
                    //   this.loading = false;
                    //   this.options = this.list.filter(item => {
                    //     return item.label.toLowerCase()
                    //       .indexOf(query.toLowerCase()) > -1;
                    //   });
                    // }, 200);
                    remoteAction('BookInfoEditExtension.getOwnerInfoByName', query).then(data => {
                        console.log(data)
                        this.ownerList = data;


                    }).catch((error) => {
                        this.$alert('查询结果错误', '提示信息', {
                          confirmButtonText: '确定',
                          callback: action => {
                            this.$message({
                              type: 'error',
                              message: `haha`
                            });
                          }
                        });
                    }).finally(() => {
                        this.loading = false;
                    });
                } else {
                  this.options = [];
                }
            },

            saveInfo: function() {
                console.log(this.bookInfo);
                remoteAction('BookInfoEditExtension.saveBookInfo', JSON.stringify(this.bookInfo)).then(data => {
                    console.log(data)
                    if (data.status == 'success') {
                        window.location.href = '/'+data.bookInfoId;
                        this.$message({
                          type: 'success',
                          message: `记录保存成功`
                        });
                    }else{
                        this.$message({
                          type: 'error',
                          message: data.errorInfo
                        });
                    }
                }).catch((error) => {
                    this.$alert('查询结果错误', '提示信息', {
                      confirmButtonText: '确定',
                      callback: action => {
                        this.$message({
                          type: 'error',
                          message: `haha`
                        });
                      }
                    });
                }).finally(() => {
                });
            },

            cancelSave: function() {
                console.log('haha');
                console.log('{!bookInfoId}');
                window.location.href = '/{!bookInfoId}';
            },

            handleClick: function(row) {
                console.log(row);
                row.isEdit = !row.isEdit;
            },

            isSelectedClick: function(row) {
                row.isSelected = !row.isSelected;
            },

            deleteRow: function(index) {
                console.log(index);
                this.bookDetailList.splice(index,1);
                this.paginationInfo.total = this.bookDetailList.length;
            },

            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
                this.paginationInfo.pageSize = val;
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
                this.paginationInfo.currentPage = val;
            },


            addButton: function(h,{column}) {
                return h(
                        'div',
                        {
                            style: "margin-left:21%;"
                        },
                        [
                            // h('span',column.label),
                            h('el-button', {
                                props: {
                                    // type: "primary",
                                    icon: "el-icon-plus",
                                    plain: true,
                                    class: "table-icon",
                                    size: "small"
                                },
                                on: {
                                    click: this.addLine
                                }
                            })
                        ]
                    );
            },

            addLine: function() {
                console.log('添加一行');
            },

            initSelect() {
                let selectMap = new Map();
                selectMap.set('0','星期一');
                selectMap.set('1','星期二');
                selectMap.set('2','星期三');
                selectMap.set('3','星期四');
                selectMap.set('4','星期五');
                selectMap.set('5','星期六');
                selectMap.set('6','星期日');
                this.selectMap = selectMap;
            },

            selectChange(event) {
                console.log('selectChange');
                console.log(event.target.value);
            }

        },
        watch: {
            selectValue(value, oldValue) {
                console.log('value: ' + value);
                console.log('oldValue: ' + oldValue);
            }
        },
        computed: {

        },
        mounted: function() {
            // this.list = this.states.map(item => {
         //        return { value: `value:${item}`, label: `label:${item}` };
         //      });
            this.bookInfo = JSON.parse('{!bookInfoStr}');
            this.paginationInfo.total = JSON.parse('{!bookDetailListStr}').length;

            this.initSelect();
        }
    });

    /*
     * 执行远程方法 最多5个参数
     * @param methodName 方法名
     * @param params 参数列表
     * @author xj
     */
    function remoteAction(methodName, ...params) {
        if (params != null && params != undefined && params.length > 0) {
            if (params.length == 1) {
                return new Promise((resove, reject) => {
                    Visualforce.remoting.Manager.invokeAction(methodName, params[0], (data, event) => {
                        if (event.status) {
                            resove(data);
                        } else if (event.type === 'exception') {
                            reject(event.message);
                        } else {
                            reject(event.message);
                        }
                    }, { escape: false });
                });
            } else if (params.length == 2) {
                return new Promise((resove, reject) => {
                    Visualforce.remoting.Manager.invokeAction(methodName, params[0], params[1], (data, event) => {
                        if (event.status) {
                            resove(data);
                        } else if (event.type === 'exception') {
                            reject(event.message);
                        } else {
                            reject(event.message);
                        }
                    }, { escape: false });
                });
            } else if (params.length == 3) {
                return new Promise((resove, reject) => {
                    Visualforce.remoting.Manager.invokeAction(methodName, params[0], params[1], params[2], (data, event) => {
                        if (event.status) {
                            resove(data);
                        } else if (event.type === 'exception') {
                            reject(event.message);
                        } else {
                            reject(event.message);
                        }
                    }, { escape: false });
                });
            } else if (params.length == 4) {
                return new Promise((resove, reject) => {
                    Visualforce.remoting.Manager.invokeAction(methodName, params[0], params[1], params[2], params[3], (data, event) => {
                        if (event.status) {
                            resove(data);
                        } else if (event.type === 'exception') {
                            reject(event.message);
                        } else {
                            reject(event.message);
                        }
                    }, { escape: false });
                });
            } else if (params.length == 5) {
                return new Promise((resove, reject) => {
                    Visualforce.remoting.Manager.invokeAction(methodName, params[0], params[1], params[2], params[3], params[4], (data, event) => {
                        if (event.status) {
                            resove(data);
                        } else if (event.type === 'exception') {
                            reject(event.message);
                        } else {
                            reject(event.message);
                        }
                    }, { escape: false });
                });
            } else {
                return new Promise((resove, reject) => {
                    reject('参数过多不支持此方法!');
                });
            }
        } else {
             return new Promise((resove, reject) => {
                Visualforce.remoting.Manager.invokeAction(methodName, ...params, (data, event) => {
                    if (event.status) {
                        resove(data);
                    } else if (event.type === 'exception') {
                        reject(event.message);
                    } else {
                        reject(event.message);
                    }
                }, { escape: false });
            });
        }
    }
    </script>
    </html>
</apex:page>